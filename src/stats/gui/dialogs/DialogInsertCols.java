/* ----------------------------------------------------------------------------
 * File: DialogInsertCols.java
 * Date: May 26th, 2013
 * ----------------------------------------------------------------------------
 */
package stats.gui.dialogs;

import stats.core.DataType;

/**
 *
 * @author marco
 */
public class DialogInsertCols extends javax.swing.JDialog {

  public static final int POSITION_AFTER = 1;

  public static final int POSITION_BEFORE = 2;

  public static final int POSITION_BEGIN = 3;

  public static final int POSITION_END = 4;
  
  private boolean dialog_result;

  /**
   * Creates new form DialogInsertCols
   */
  public DialogInsertCols(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    dialog_result = false;
    // set column type combobox 
    combo_type.addItem("Character");
    combo_type.addItem("Numeric");
    combo_type.setSelectedItem("Character");
    // set number spinner 
    spinner_number.setValue(1);
    // TODO: implement minimum value to 1       

  }

  /**
   * Returns the name of the new columns to be inserted. The value is extracted
   * from the content of text field inserted by the user.
   *
   * @return name for new columns.
   */
  public String getColumnName() {
    return text_name.getText();
  }

  /**
   * Returns the type of new columns to be inserted. The return type is
   * {@link DataType} and it is related to the selection of combo-box.
   *
   * @return the type of new columns.
   */
  public DataType getColumnType() {
    String selection = combo_type.getSelectedItem().toString();
    if (selection == "Character") return DataType.CHARACTER;
    else if (selection == "Numeric") return DataType.NUMERIC;
    return DataType.UNDEFINED;
  }

  /**
   * Returns the number of new columns to be inserted. The value is extracted
   * from the spinner-box of the dialog.
   *
   * @return number of new columns.
   */
  public int getColumnNumber() {
    return Integer.parseInt(spinner_number.getValue().toString());
  }

  /**
   * Returns the position of the new columns to be inserted. It depends on
   * selection of radio-boxes in the dialog window by the user. The possible
   * results are:
   * <ul> <li>{@code POSITION_AFTER},</li>
   * <li>{@code POSITION_BEFORE},</li>
   * <li>{@code POSITION_BEGIN},</li>
   * <li>{@code POSITION_END}</li></ul>
   *
   * @return position of the insertion.
   */
  public int getColumnPosition() {
    // check which radio button is selected and returns the proper value
    if (radio_after.isSelected()) return POSITION_AFTER;
    else if (radio_before.isSelected()) return POSITION_BEFORE;
    else if (radio_begin.isSelected()) return POSITION_BEGIN;
    else return POSITION_END;
  }

  public boolean showDialog() {
    setVisible(true);
    return dialog_result;
  }
  
  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    radio_group = new javax.swing.ButtonGroup();
    text_name = new javax.swing.JTextField();
    radio_before = new javax.swing.JRadioButton();
    radio_after = new javax.swing.JRadioButton();
    radio_begin = new javax.swing.JRadioButton();
    radio_end = new javax.swing.JRadioButton();
    combo_type = new javax.swing.JComboBox();
    spinner_number = new javax.swing.JSpinner();
    javax.swing.JLabel label_header = new javax.swing.JLabel();
    javax.swing.JLabel label_type = new javax.swing.JLabel();
    javax.swing.JLabel label_number = new javax.swing.JLabel();
    javax.swing.JLabel label_position = new javax.swing.JLabel();
    separator = new javax.swing.JSeparator();
    button_ok = new javax.swing.JButton();
    button_cancel = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Insert column(s)...");

    radio_group.add(radio_before);
    radio_before.setText("before");

    radio_group.add(radio_after);
    radio_after.setSelected(true);
    radio_after.setText("after");

    radio_group.add(radio_begin);
    radio_begin.setText("begin");

    radio_group.add(radio_end);
    radio_end.setText("end");

    label_header.setText("Insert name of new column(s)");

    label_type.setText("Type :");

    label_number.setText("Number :");

    label_position.setText("Position :");

    button_ok.setText("OK");
    button_ok.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        button_okActionPerformed(evt);
      }
    });

    button_cancel.setText("Cancel");
    button_cancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        button_cancelActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(label_type)
              .addComponent(label_position))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addComponent(combo_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_number)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinner_number, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(layout.createSequentialGroup()
                .addComponent(radio_after)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_before)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_begin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_end))))
          .addComponent(text_name)
          .addGroup(layout.createSequentialGroup()
            .addComponent(label_header)
            .addGap(0, 0, Short.MAX_VALUE))
          .addComponent(separator)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(button_ok)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(button_cancel)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(label_header)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(text_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(radio_before)
          .addComponent(radio_after)
          .addComponent(radio_begin)
          .addComponent(radio_end)
          .addComponent(label_position))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(combo_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(spinner_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(label_type)
          .addComponent(label_number))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(5, 5, 5)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(button_cancel)
          .addComponent(button_ok))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void button_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_okActionPerformed
    dialog_result = true;
    this.dispose();
  }//GEN-LAST:event_button_okActionPerformed

  private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
    dialog_result = false;
    this.dispose();
  }//GEN-LAST:event_button_cancelActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(DialogInsertCols.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(DialogInsertCols.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(DialogInsertCols.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(DialogInsertCols.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        DialogInsertCols dialog = new DialogInsertCols(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton button_cancel;
  private javax.swing.JButton button_ok;
  private javax.swing.JComboBox combo_type;
  private javax.swing.JRadioButton radio_after;
  private javax.swing.JRadioButton radio_before;
  private javax.swing.JRadioButton radio_begin;
  private javax.swing.JRadioButton radio_end;
  private javax.swing.ButtonGroup radio_group;
  private javax.swing.JSeparator separator;
  private javax.swing.JSpinner spinner_number;
  private javax.swing.JTextField text_name;
  // End of variables declaration//GEN-END:variables
}
